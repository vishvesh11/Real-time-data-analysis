apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: influxdb
  labels:
    app.kubernetes.io/name: influxdb
    {{- include "realtime-app.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: "influxdb-service"
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb
      {{- include "realtime-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb
        {{- include "realtime-app.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "realtime-app.serviceAccountName" . }}
      containers:
        - name: influxdb
          image: "{{ .Values.influxdb.image }}"
          ports:
            - containerPort: 8086
          env:
            - name: DOCKER_INFLUXDB_INIT_MODE
              value: setup
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              value: {{ .Values.influxdb.adminUser | quote }}
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              value: {{ .Values.influxdb.adminPass | quote }}
            - name: DOCKER_INFLUXDB_INIT_ORG
              value: {{ .Values.influxdb.org | quote }}
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              value: {{ .Values.influxdb.bucket | quote }}
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.influxdbToken.name }}
                  key: INFLUXDB_TOKEN
          volumeMounts:
            - name: influxdb-storage
              mountPath: /var/lib/influxdb2
          resources:
            {{- toYaml .Values.influxdb.resources | nindent 12 }}
  volumeClaimTemplates:
    - metadata:
        name: influxdb-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.influxdb.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.influxdb.persistence.size }}